@using parakeet.Models
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Profile</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">Email</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">Password</a></li>
    @if (User.IsInRole("Admin"))
    {
        // redirect to home until admin creation page has been made
        <li class="nav-item">
            <a class="nav-link " asp-area="Identity" asp-page="/Account/AdminRegister">Create New Admin</a>
        </li>
        <li class="nav-item">
            <a class="nav-link " asp-area="" asp-controller="AdminDashboard" asp-action="Index">Dashboard</a>
        </li>
    }
    else
    {
        // if user is a basic role
    <li class="nav-item">
        <a class="nav-link " asp-area="" asp-controller="DesignDashboard" asp-action="Index">Design Dashboard</a>
    </li>
    <li class="nav-item">
        <a class="nav-link " asp-area="" asp-controller="OrderHistories" asp-action="Index">View Order History</a>
    </li>
    }
</ul>
